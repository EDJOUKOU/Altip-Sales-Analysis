<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelRelationshipPerfOptions />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='transactions+ (sales)' inline='true' name='federated.0vz6fw20d9k3h114802wa0t0qn3f' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.03d41rd1u39yia1epkalu0ehaqs4'>
            <connection class='mysql' dbname='sales' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='mysql.03d41rd1u39yia1epkalu0ehaqs4' name='transactions' table='[transactions]' type='table' />
          <relation connection='mysql.03d41rd1u39yia1epkalu0ehaqs4' name='customers' table='[customers]' type='table' />
          <relation connection='mysql.03d41rd1u39yia1epkalu0ehaqs4' name='date' table='[date]' type='table' />
          <relation connection='mysql.03d41rd1u39yia1epkalu0ehaqs4' name='markets' table='[markets]' type='table' />
          <relation connection='mysql.03d41rd1u39yia1epkalu0ehaqs4' name='products' table='[products]' type='table' />
        </relation>
        <cols>
          <map key='[currency]' value='[transactions].[currency]' />
          <map key='[custmer_name]' value='[customers].[custmer_name]' />
          <map key='[customer_code (customers)]' value='[customers].[customer_code]' />
          <map key='[customer_code]' value='[transactions].[customer_code]' />
          <map key='[customer_type]' value='[customers].[customer_type]' />
          <map key='[cy_date]' value='[date].[cy_date]' />
          <map key='[date]' value='[date].[date]' />
          <map key='[date_yy_mmm]' value='[date].[date_yy_mmm]' />
          <map key='[market_code]' value='[transactions].[market_code]' />
          <map key='[markets_code]' value='[markets].[markets_code]' />
          <map key='[markets_name]' value='[markets].[markets_name]' />
          <map key='[month_name]' value='[date].[month_name]' />
          <map key='[order_date]' value='[transactions].[order_date]' />
          <map key='[product_code (products)]' value='[products].[product_code]' />
          <map key='[product_code]' value='[transactions].[product_code]' />
          <map key='[product_type]' value='[products].[product_type]' />
          <map key='[sales_amount]' value='[transactions].[sales_amount]' />
          <map key='[sales_qty]' value='[transactions].[sales_qty]' />
          <map key='[year]' value='[date].[year]' />
          <map key='[zone]' value='[markets].[zone]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_ADFBE15ACDD5467F95DBBDA5EAA66527]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_ADFBE15ACDD5467F95DBBDA5EAA66527]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[market_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>market_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_ADFBE15ACDD5467F95DBBDA5EAA66527]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_date]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>order_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <object-id>[transactions_ADFBE15ACDD5467F95DBBDA5EAA66527]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_qty</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sales_qty]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_qty</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[transactions_ADFBE15ACDD5467F95DBBDA5EAA66527]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sales_amount]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_amount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[transactions_ADFBE15ACDD5467F95DBBDA5EAA66527]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>currency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[currency]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>currency</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_ADFBE15ACDD5467F95DBBDA5EAA66527]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code (customers)]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[customers_0498D9DF0D0F4C78BB6AFCD22DBE0BAA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>custmer_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[custmer_name]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>custmer_name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[customers_0498D9DF0D0F4C78BB6AFCD22DBE0BAA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_type]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_type</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[customers_0498D9DF0D0F4C78BB6AFCD22DBE0BAA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <object-id>[date_FEFBE578D39643C4B66FABB7DE4DDF85]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cy_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[cy_date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>cy_date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <object-id>[date_FEFBE578D39643C4B66FABB7DE4DDF85]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[date_FEFBE578D39643C4B66FABB7DE4DDF85]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month_name]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>month_name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[date_FEFBE578D39643C4B66FABB7DE4DDF85]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_yy_mmm</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date_yy_mmm]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date_yy_mmm</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[date_FEFBE578D39643C4B66FABB7DE4DDF85]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_code]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_code</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[markets_014C50578C9A4017A55A8F183283EFBD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_name]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_name</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[markets_014C50578C9A4017A55A8F183283EFBD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[zone]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>zone</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[markets_014C50578C9A4017A55A8F183283EFBD]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code (products)]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[products_B98CFC228716498AB83A74AA6F221C69]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_type]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_type</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[products_B98CFC228716498AB83A74AA6F221C69]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Normalized Sales Rev' datatype='real' name='[Calculation_859624596520226816]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [currency] == &apos;USD&apos; THEN [sales_amount]*85&#13;&#10;ELSE [sales_amount]&#13;&#10;END' />
      </column>
      <column caption='Blank' datatype='string' datatype-customized='true' name='[Calculation_859624596593233922]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&apos;&apos;' />
      </column>
      <column caption='customers' datatype='table' name='[__tableau_internal_object_id__].[customers_0498D9DF0D0F4C78BB6AFCD22DBE0BAA]' role='measure' type='quantitative' />
      <column caption='date' datatype='table' name='[__tableau_internal_object_id__].[date_FEFBE578D39643C4B66FABB7DE4DDF85]' role='measure' type='quantitative' />
      <column caption='markets' datatype='table' name='[__tableau_internal_object_id__].[markets_014C50578C9A4017A55A8F183283EFBD]' role='measure' type='quantitative' />
      <column caption='products' datatype='table' name='[__tableau_internal_object_id__].[products_B98CFC228716498AB83A74AA6F221C69]' role='measure' type='quantitative' />
      <column caption='transactions' datatype='table' name='[__tableau_internal_object_id__].[transactions_ADFBE15ACDD5467F95DBBDA5EAA66527]' role='measure' type='quantitative' />
      <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
      <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
      <column caption='Customer Code (Customers)' datatype='string' name='[customer_code (customers)]' role='dimension' type='nominal' />
      <column caption='Customer Code' datatype='string' name='[customer_code]' role='dimension' type='nominal' />
      <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
      <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Yy Mmm' datatype='string' name='[date_yy_mmm]' role='dimension' type='nominal' />
      <column caption='Market Code' datatype='string' name='[market_code]' role='dimension' type='nominal' />
      <column caption='Markets Code' datatype='string' name='[markets_code]' role='dimension' type='nominal' />
      <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
      <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
      <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
      <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
      <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
      <column caption='Product Type' datatype='string' name='[product_type]' role='dimension' type='nominal' />
      <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
      <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column caption='Zone' datatype='string' name='[zone]' role='dimension' type='nominal' />
      <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[product_code (products)]' derivation='None' name='[none:product_code (products):nk]' pivot='key' type='nominal' />
      <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Blank,YEAR(Cy Date))' hidden='true' name='[Action (Blank,YEAR(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_859624596593233922]' />
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:product_code (products):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Prod008&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod029&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod049&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod069&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod089&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod109&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod129&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod149&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod169&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod189&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod209&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod229&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod249&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod269&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod041&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod061&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod081&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod101&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod121&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod141&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod161&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod181&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod201&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod221&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod241&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod261&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod004&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod025&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod045&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod065&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod085&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod105&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod125&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod145&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod165&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod185&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod205&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod225&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod245&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod265&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod012&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod033&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod053&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod073&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod093&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod113&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod133&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod153&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod173&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod193&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod213&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod233&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod253&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod273&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod009&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod030&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod050&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod070&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod090&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod110&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod130&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod150&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod170&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod190&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod210&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod230&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod250&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod270&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod005&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod026&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod046&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod066&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod086&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod106&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod126&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod146&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod166&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod186&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod206&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod226&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod246&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod266&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod018&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod039&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod059&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod079&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod099&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod119&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod139&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod159&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod179&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod199&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod219&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod239&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod259&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod279&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod001&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod022&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod042&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod062&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod082&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod102&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod122&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod142&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod162&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod182&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod202&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod222&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod242&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod262&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod016&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod037&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod057&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod077&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod097&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod117&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod137&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod157&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod177&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod197&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod217&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod237&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod257&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod277&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod006&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod027&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod047&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod067&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod087&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod107&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod127&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod147&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod167&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod187&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod207&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod227&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod247&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod267&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod013&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod034&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod054&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod074&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod094&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod114&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod134&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod154&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod174&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod194&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod214&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod234&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod254&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod274&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod014&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod035&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod055&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod075&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod095&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod115&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod135&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod155&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod175&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod195&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod215&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod235&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod255&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod275&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod017&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod038&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod058&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod078&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod098&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod118&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod138&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod158&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod178&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod198&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod218&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod238&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod258&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod278&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod019&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod020&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod040&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod060&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod080&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod100&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod120&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod140&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod160&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod180&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod200&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod220&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod240&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod260&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod010&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod031&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod051&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod071&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod091&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod111&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod131&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod151&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod171&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod191&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod211&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod231&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod251&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod271&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod007&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod028&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod048&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod068&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod088&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod108&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod128&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod148&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod168&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod188&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod208&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod228&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod248&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod268&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod002&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod023&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod043&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod063&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod083&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod103&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod123&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod143&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod163&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod183&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod203&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod223&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod243&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod263&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod015&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod036&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod056&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod076&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod096&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod116&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod136&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod156&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod176&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod196&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod216&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod236&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod256&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod276&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod011&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod032&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod052&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod072&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod092&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod112&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod132&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod152&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod172&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod192&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod212&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod232&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod252&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod272&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod003&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod024&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod044&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod064&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod084&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod104&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod124&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod144&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod164&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod184&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod204&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod224&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod244&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod264&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:markets_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Kochi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ahmedabad&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chennai&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Patna&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lucknow&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Delhi NCR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bengaluru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hyderabad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Surat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mumbai&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kanpur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhopal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nagpur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhubaneshwar&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='product_code' />
        <field-sort-custom-order field='customer_code' />
        <field-sort-custom-order field='market_code' />
        <field-sort-custom-order field='order_date' />
        <field-sort-custom-order field='sales_qty' />
        <field-sort-custom-order field='sales_amount' />
        <field-sort-custom-order field='currency' />
        <field-sort-custom-order field='Calculation_859624596520226816' />
      </field-sort-info>
      <filter class='categorical' column='[markets_code]' filter-group='2'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark001&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark002&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark003&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark004&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark005&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark006&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark007&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark008&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark009&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark010&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark011&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark012&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark013&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark014&quot;' />
          <groupfilter function='member' level='[markets_code]' member='&quot;Mark015&quot;' />
        </groupfilter>
      </filter>
      <object-graph>
        <objects>
          <object caption='customers' id='customers_0498D9DF0D0F4C78BB6AFCD22DBE0BAA'>
            <properties context=''>
              <relation connection='mysql.03d41rd1u39yia1epkalu0ehaqs4' name='customers' table='[customers]' type='table' />
            </properties>
          </object>
          <object caption='date' id='date_FEFBE578D39643C4B66FABB7DE4DDF85'>
            <properties context=''>
              <relation connection='mysql.03d41rd1u39yia1epkalu0ehaqs4' name='date' table='[date]' type='table' />
            </properties>
          </object>
          <object caption='markets' id='markets_014C50578C9A4017A55A8F183283EFBD'>
            <properties context=''>
              <relation connection='mysql.03d41rd1u39yia1epkalu0ehaqs4' name='markets' table='[markets]' type='table' />
            </properties>
          </object>
          <object caption='products' id='products_B98CFC228716498AB83A74AA6F221C69'>
            <properties context=''>
              <relation connection='mysql.03d41rd1u39yia1epkalu0ehaqs4' name='products' table='[products]' type='table' />
            </properties>
          </object>
          <object caption='transactions' id='transactions_ADFBE15ACDD5467F95DBBDA5EAA66527'>
            <properties context=''>
              <relation connection='mysql.03d41rd1u39yia1epkalu0ehaqs4' name='transactions' table='[transactions]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[customer_code]' />
              <expression op='[customer_code (customers)]' />
            </expression>
            <first-end-point object-id='transactions_ADFBE15ACDD5467F95DBBDA5EAA66527' />
            <second-end-point is-db-set-unique-key='true' object-id='customers_0498D9DF0D0F4C78BB6AFCD22DBE0BAA' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[order_date]' />
              <expression op='[date]' />
            </expression>
            <first-end-point object-id='transactions_ADFBE15ACDD5467F95DBBDA5EAA66527' />
            <second-end-point is-db-set-unique-key='true' object-id='date_FEFBE578D39643C4B66FABB7DE4DDF85' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[market_code]' />
              <expression op='[markets_code]' />
            </expression>
            <first-end-point object-id='transactions_ADFBE15ACDD5467F95DBBDA5EAA66527' />
            <second-end-point is-db-set-unique-key='true' object-id='markets_014C50578C9A4017A55A8F183283EFBD' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[product_code]' />
              <expression op='[product_code (products)]' />
            </expression>
            <first-end-point object-id='transactions_ADFBE15ACDD5467F95DBBDA5EAA66527' />
            <second-end-point is-db-set-unique-key='true' object-id='products_B98CFC228716498AB83A74AA6F221C69' unique-key='true' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_57844902BB1F47359E59A8DC1EAC544A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0vz6fw20d9k3h114802wa0t0qn3f' />
          </datasources>
          <datasource-dependencies datasource='federated.0vz6fw20d9k3h114802wa0t0qn3f'>
            <column caption='Blank' datatype='string' datatype-customized='true' name='[Calculation_859624596593233922]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;&apos;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_859624596593233922]' derivation='None' name='[none:Calculation_859624596593233922:ok]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_57844902BB1F47359E59A8DC1EAC544A]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_859624596593233922]' member='&quot;&quot;' />
              <groupfilter function='member' level='[yr:cy_date:ok]' member='2018' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='18' />
            <format attr='cell-w' value='66' />
            <format attr='cell-h' value='22' />
            <format attr='cell' value='22' />
            <format attr='cell-q' value='110' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[yr:cy_date:ok]' value='15' />
            <format attr='color' field='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[yr:cy_date:ok]' value='#4e79a7' />
            <format attr='font-weight' field='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[yr:cy_date:ok]' value='bold' />
            <format attr='font-weight' field='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[mn:cy_date:ok]' value='bold' />
            <format attr='text-format' field='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[mn:cy_date:ok]' value='iLLL' />
            <format attr='font-size' field='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[mn:cy_date:ok]' value='12' />
            <format attr='color' field='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[mn:cy_date:ok]' value='#00007f' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:Calculation_859624596593233922:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[mn:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{8AF402F2-A1B5-46C5-AED6-ECA15E76D62D}' />
    </worksheet>
    <worksheet name='Quantity'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0vz6fw20d9k3h114802wa0t0qn3f' />
          </datasources>
          <datasource-dependencies datasource='federated.0vz6fw20d9k3h114802wa0t0qn3f'>
            <column caption='Blank' datatype='string' datatype-customized='true' name='[Calculation_859624596593233922]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;&apos;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_57844902BB1F47359E59A8DC1EAC544A]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_859624596593233922]' member='&quot;&quot;' />
              <groupfilter function='member' level='[yr:cy_date:ok]' member='2018' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:sales_qty:qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:sales_qty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontalignment='0' fontcolor='#00007f' fontsize='15'>Total sales</run>
                <run fontalignment='0'>Æ&#10;</run>
                <run bold='true' fontalignment='0' fontcolor='#00007f' fontsize='15'><![CDATA[<[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:sales_qty:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{07470376-64B0-4640-999E-C9EDC834F3F9}' />
    </worksheet>
    <worksheet name='Revenue by Market'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0vz6fw20d9k3h114802wa0t0qn3f' />
          </datasources>
          <datasource-dependencies datasource='federated.0vz6fw20d9k3h114802wa0t0qn3f'>
            <column caption='Normalized Sales Rev' datatype='real' name='[Calculation_859624596520226816]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; THEN [sales_amount]*85&#13;&#10;ELSE [sales_amount]&#13;&#10;END' />
            </column>
            <column caption='Blank' datatype='string' datatype-customized='true' name='[Calculation_859624596593233922]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;&apos;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_859624596520226816]' derivation='Sum' name='[sum:Calculation_859624596520226816:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_57844902BB1F47359E59A8DC1EAC544A]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_859624596593233922]' member='&quot;&quot;' />
              <groupfilter function='member' level='[yr:cy_date:ok]' member='2018' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:Calculation_859624596520226816:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='114' />
            <format attr='cell-h' value='38' />
            <format attr='cell' value='38' />
            <format attr='cell-q' value='190' />
            <format attr='text-format' field='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:Calculation_859624596520226816:qk]' value='n#,##0,,M;-#,##0,,M' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:markets_name:nk]' value='116' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:markets_name:nk]' />
              <text column='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:Calculation_859624596520226816:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:markets_name:nk]</rows>
        <cols>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:Calculation_859624596520226816:qk]</cols>
      </table>
      <simple-id uuid='{7D536B62-0EB9-4E91-BA69-2D09DE7788E8}' />
    </worksheet>
    <worksheet name='Revenues'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Total Revenues</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0vz6fw20d9k3h114802wa0t0qn3f' />
          </datasources>
          <datasource-dependencies datasource='federated.0vz6fw20d9k3h114802wa0t0qn3f'>
            <column caption='Normalized Sales Rev' datatype='real' name='[Calculation_859624596520226816]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; THEN [sales_amount]*85&#13;&#10;ELSE [sales_amount]&#13;&#10;END' />
            </column>
            <column caption='Blank' datatype='string' datatype-customized='true' name='[Calculation_859624596593233922]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;&apos;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_859624596520226816]' derivation='Sum' name='[sum:Calculation_859624596520226816:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_57844902BB1F47359E59A8DC1EAC544A]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_859624596593233922]' member='&quot;&quot;' />
              <groupfilter function='member' level='[yr:cy_date:ok]' member='2018' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:Calculation_859624596520226816:qk]' value='c&quot;₹&quot;#,##0;&quot;₹&quot;-#,##0' />
            <format attr='width' value='293' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:Calculation_859624596520226816:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontalignment='0' fontcolor='#00007f' fontsize='15'>Total Revenues</run>
                <run fontalignment='0'>Æ&#10;</run>
                <run bold='true' fontalignment='0' fontcolor='#00007f' fontsize='15'><![CDATA[ <[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:Calculation_859624596520226816:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2D529BF6-F940-4280-8981-C6CC3F0548E2}' />
    </worksheet>
    <worksheet name='Revenues by year'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0vz6fw20d9k3h114802wa0t0qn3f' />
          </datasources>
          <datasource-dependencies datasource='federated.0vz6fw20d9k3h114802wa0t0qn3f'>
            <column caption='Normalized Sales Rev' datatype='real' name='[Calculation_859624596520226816]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; THEN [sales_amount]*85&#13;&#10;ELSE [sales_amount]&#13;&#10;END' />
            </column>
            <column caption='Blank' datatype='string' datatype-customized='true' name='[Calculation_859624596593233922]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;&apos;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_859624596520226816]' derivation='Sum' name='[sum:Calculation_859624596520226816:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_57844902BB1F47359E59A8DC1EAC544A]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_859624596593233922]' member='&quot;&quot;' />
              <groupfilter function='member' level='[yr:cy_date:ok]' member='2018' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:Calculation_859624596520226816:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[mn:cy_date:ok]' value='31' />
            <format attr='text-format' field='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:Calculation_859624596520226816:qk]' value='n#,##0,,M;-#,##0,,M' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:Calculation_859624596520226816:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:Calculation_859624596520226816:qk]' num-steps='5' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:Calculation_859624596520226816:qk]' />
              <text column='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:Calculation_859624596520226816:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:Calculation_859624596520226816:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:Calculation_859624596520226816:qk]</rows>
        <cols>([federated.0vz6fw20d9k3h114802wa0t0qn3f].[yr:cy_date:ok] / [federated.0vz6fw20d9k3h114802wa0t0qn3f].[mn:cy_date:ok])</cols>
      </table>
      <simple-id uuid='{CFF9836D-8D5F-4B4D-BC74-4B7AA82EC337}' />
    </worksheet>
    <worksheet name='Sales Quantity by Market'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0vz6fw20d9k3h114802wa0t0qn3f' />
          </datasources>
          <datasource-dependencies datasource='federated.0vz6fw20d9k3h114802wa0t0qn3f'>
            <column caption='Normalized Sales Rev' datatype='real' name='[Calculation_859624596520226816]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; THEN [sales_amount]*85&#13;&#10;ELSE [sales_amount]&#13;&#10;END' />
            </column>
            <column caption='Blank' datatype='string' datatype-customized='true' name='[Calculation_859624596593233922]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;&apos;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_859624596520226816]' derivation='Sum' name='[sum:Calculation_859624596520226816:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_57844902BB1F47359E59A8DC1EAC544A]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_859624596593233922]' member='&quot;&quot;' />
              <groupfilter function='member' level='[yr:cy_date:ok]' member='2018' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:sales_qty:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
            <format attr='text-format' field='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:Calculation_859624596520226816:qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:markets_name:nk]' value='128' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:markets_name:nk]' />
              <text column='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:Calculation_859624596520226816:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:markets_name:nk]</rows>
        <cols>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:sales_qty:qk]</cols>
      </table>
      <simple-id uuid='{BE00F10A-D871-48DD-BFA9-7B6815A22AA1}' />
    </worksheet>
    <worksheet name='Top customers'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0vz6fw20d9k3h114802wa0t0qn3f' />
          </datasources>
          <datasource-dependencies datasource='federated.0vz6fw20d9k3h114802wa0t0qn3f'>
            <column caption='Normalized Sales Rev' datatype='real' name='[Calculation_859624596520226816]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; THEN [sales_amount]*85&#13;&#10;ELSE [sales_amount]&#13;&#10;END' />
            </column>
            <column caption='Blank' datatype='string' datatype-customized='true' name='[Calculation_859624596593233922]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;&apos;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_859624596520226816]' derivation='Sum' name='[sum:Calculation_859624596520226816:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_57844902BB1F47359E59A8DC1EAC544A]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_859624596593233922]' member='&quot;&quot;' />
              <groupfilter function='member' level='[yr:cy_date:ok]' member='2018' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:custmer_name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_859624596520226816])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:custmer_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:custmer_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:Calculation_859624596520226816:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:custmer_name:nk]</column>
            <column>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='126' />
            <format attr='cell-h' value='42' />
            <format attr='cell' value='42' />
            <format attr='cell-q' value='210' />
            <format attr='text-format' field='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:Calculation_859624596520226816:qk]' value='n#,##0,,M;-#,##0,,M' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:custmer_name:nk]' value='156' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:custmer_name:nk]' />
              <text column='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:Calculation_859624596520226816:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:custmer_name:nk]</rows>
        <cols>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:Calculation_859624596520226816:qk]</cols>
      </table>
      <simple-id uuid='{C813FCE1-BCE5-4990-BD2A-4DC5A6BBA51D}' />
    </worksheet>
    <worksheet name='Top products'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0vz6fw20d9k3h114802wa0t0qn3f' />
          </datasources>
          <datasource-dependencies datasource='federated.0vz6fw20d9k3h114802wa0t0qn3f'>
            <column caption='Normalized Sales Rev' datatype='real' name='[Calculation_859624596520226816]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [currency] == &apos;USD&apos; THEN [sales_amount]*85&#13;&#10;ELSE [sales_amount]&#13;&#10;END' />
            </column>
            <column caption='Blank' datatype='string' datatype-customized='true' name='[Calculation_859624596593233922]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;&apos;' />
            </column>
            <column-instance column='[product_code (products)]' derivation='Attribute' name='[attr:product_code (products):nk]' pivot='key' type='nominal' />
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[product_code (products)]' derivation='None' name='[none:product_code (products):nk]' pivot='key' type='nominal' />
            <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_859624596520226816]' derivation='Sum' name='[sum:Calculation_859624596520226816:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_57844902BB1F47359E59A8DC1EAC544A]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Calculation_859624596593233922]' member='&quot;&quot;' />
              <groupfilter function='member' level='[yr:cy_date:ok]' member='2018' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:product_code (products):nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_859624596520226816])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:product_code (products):nk]' />
                  <groupfilter function='member' level='[none:product_code (products):nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:product_code (products):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:Calculation_859624596520226816:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:product_code (products):nk]</column>
            <column>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[Action (Blank,YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='114' />
            <format attr='cell-h' value='38' />
            <format attr='cell' value='38' />
            <format attr='cell-q' value='190' />
            <format attr='text-format' field='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:Calculation_859624596520226816:qk]' value='n#,##0,,M;-#,##0,,M' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[attr:product_code (products):nk]' />
              <text column='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:Calculation_859624596520226816:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:Calculation_859624596520226816:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:product_code (products):nk]</rows>
        <cols>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:Calculation_859624596520226816:qk]</cols>
      </table>
      <simple-id uuid='{C1C2427D-8776-44E5-822B-07554E5756B9}' />
    </worksheet>
    <worksheet name='Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0vz6fw20d9k3h114802wa0t0qn3f' />
          </datasources>
          <datasource-dependencies datasource='federated.0vz6fw20d9k3h114802wa0t0qn3f'>
            <column caption='Blank' datatype='string' datatype-customized='true' name='[Calculation_859624596593233922]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&apos;&apos;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_859624596593233922]' derivation='None' name='[none:Calculation_859624596593233922:ok]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:Calculation_859624596593233922:ok]' value='19' />
            <format attr='height' value='14' />
            <format attr='cell-w' value='114' />
            <format attr='cell-h' value='38' />
            <format attr='cell' value='38' />
            <format attr='cell-q' value='190' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[yr:cy_date:ok]' value='bold' />
            <format attr='font-size' field='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[yr:cy_date:ok]' value='15' />
            <format attr='color' field='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[yr:cy_date:ok]' value='#00007f' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:Calculation_859624596593233922:ok]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[yr:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{764906CF-D2D0-496A-9628-651E4744768B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='900' maxwidth='1424' minheight='900' minwidth='1424' preset-index='2' sizing-mode='fixed' />
      <zones>
        <zone h='7333' id='3' name='Year' show-title='false' w='35042' x='24438' y='444' />
        <zone h='6556' id='4' name='Month' show-title='false' w='84570' x='8789' y='9333' />
        <zone h='12889' id='5' name='Revenues' show-title='false' w='26074' x='586' y='14778' />
        <zone h='64000' id='6' name='Revenue by Market' w='28371' x='351' y='27000' />
        <zone h='63667' id='7' name='Sales Quantity by Market' w='26475' x='28371' y='28111' />
        <zone h='12444' id='8' name='Quantity' show-title='false' w='23221' x='25801' y='14778' />
        <zone h='30667' id='9' name='Revenues by year' w='38975' x='59831' y='15333' />
        <zone h='32000' id='10' name='Top customers' show-title='false' w='26545' x='45084' y='51111' />
        <zone h='31556' id='11' name='Top products' show-title='false' w='29073' x='70646' y='51778' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='14' param='vert' type-v2='layout-flow' w='98876' x='562' y='889'>
                <zone fixed-size='66' h='7333' id='3' is-fixed='true' name='Year' show-title='false' w='35042' x='24438' y='444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='59' h='6556' id='4' is-fixed='true' name='Month' show-title='false' w='84570' x='8789' y='9333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='116' h='12889' id='5' is-fixed='true' name='Revenues' show-title='false' w='26074' x='586' y='14778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='112' h='12444' id='8' is-fixed='true' name='Quantity' show-title='false' w='23221' x='25801' y='14778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='276' h='30667' id='9' is-fixed='true' name='Revenues by year' w='38975' x='59831' y='15333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='64000' id='6' is-fixed='true' name='Revenue by Market' w='28371' x='351' y='27000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='63667' id='7' is-fixed='true' name='Sales Quantity by Market' w='26475' x='28371' y='28111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='32000' id='10' is-fixed='true' name='Top customers' show-title='false' w='26545' x='45084' y='51111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='31556' id='11' is-fixed='true' name='Top products' show-title='false' w='29073' x='70646' y='51778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3B0C7AF3-50B4-428E-AB71-A6AAECDB8A86}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Revenues'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4A855C38-0C27-4AA5-946A-299A981137F1}' />
    </window>
    <window class='worksheet' name='Quantity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B52DB3E8-E284-4A24-A2C8-A0D47C97A1CA}' />
    </window>
    <window class='worksheet' name='Revenue by Market'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:markets_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{491C295B-176F-4365-B966-9DADD4DAC3A2}' />
    </window>
    <window class='worksheet' name='Sales Quantity by Market'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:markets_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9B550084-146E-401C-85B1-DFA1F25DCC6A}' />
    </window>
    <window class='worksheet' name='Top customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:custmer_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:custmer_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7F5EEF80-4BF1-413F-A7D3-7569D9240A7F}' />
    </window>
    <window class='worksheet' name='Top products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[attr:product_code (products):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[attr:product_code (products):nk]</field>
            <field>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:product_code (products):nk]</field>
            <field>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:product_code:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{69663546-03B4-443F-ADB4-9D0B59C38349}' />
    </window>
    <window class='worksheet' name='Revenues by year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[sum:Calculation_859624596520226816:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:year:qk]</field>
            <field>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{86A35A30-8A95-40C1-9AA2-D8D6EC5AB081}' />
    </window>
    <window class='worksheet' name='Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:Calculation_859624596593233922:ok]</field>
            <field>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B0E8D5D1-C091-4464-A0CA-2DED4DEC2FB8}' />
    </window>
    <window class='worksheet' name='Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[none:Calculation_859624596593233922:ok]</field>
            <field>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EBC181C6-C079-4B4B-BF6B-03E79E78B8F8}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Month' />
        <viewpoint name='Quantity' />
        <viewpoint name='Revenue by Market' />
        <viewpoint name='Revenues' />
        <viewpoint name='Revenues by year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales Quantity by Market' />
        <viewpoint name='Top customers' />
        <viewpoint name='Top products'>
          <highlight field='[federated.0vz6fw20d9k3h114802wa0t0qn3f].[attr:product_code (products):nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Year'>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.0vz6fw20d9k3h114802wa0t0qn3f].[yr:cy_date:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>2018</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{8AD298AB-1A9C-42A5-9B8E-F9780ED96F2E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='44' name='Month' width='192'>
      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
    </thumbnail>
    <thumbnail height='86' name='Quantity' width='184'>
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue by Market' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO2deXAc+XXfP9099wxmMBduECABEgBvggSPXVmrw5ZVqdJlaR05VpRUJCvr
      pEqRr5QTOxVVorKk2tixbMnKyomykWVltZuVLFmWvNIeOpZcHgBIkMRB3Bhcg5nBDOY+uzt/
      gMceXC5JDAgM8PtUoTCY6Xn9etDf6ff7vdfvJ+m6riMQbFPkjXZAINhIKkIAuq5TjguVruto
      mib8WWd/gIqxUxECKNeHUC5bmqaV5YS7YascNsrlj6qq28qOoSzWHwAvLfyIolZYo5XVb0pJ
      WpvudV0HCSSkNfoDmq4hbzF/KslOxQhgZOUyWTWz0W4IthhlDoF0kskUajFPJrvWb2uBYP25
      5yvA1NAFZld0FK1AS+dBmnzOV72qMjY6zp6dPuZjRjraagGIhZeweWoxKzDRd5YFYzW/dLCD
      C+cvcKynh2sD51kpyFRV+3CV4kwkC5iKWWp3HWJXQ3W5jlUgQNM0JvsCFPMlOk7tuncB6LKR
      A4f3U21WOXN+ABcNXBoJoCgGunuO3NgNU6NDrCyN4W/dC+EQRn8tZkDXTdikNMsZlWKxAIUo
      kXwVDx/fiyRB4PJl9h3pxqtkONc3KwQgKCvR+RXGz08jyRKdD7fdfwgkKWYUWWd6bJzqmjrM
      eob5SOr6qzI79+yl+/ABUvEIarHIq+codnV2MjkyvPpHLolkcyHdHL8VuHz+DM+/1Meujl33
      655AcFt8zR6Of+gwkiQhSdL9CyAenkU2u7A5rMiKibrmNmpcljdsd7t5Cdlow2cusJQsQlU9
      hdAERVUjm8kCJg4c7cFtUyiVSvfrnkBwV9xzCFTtqmZs8BIOp5vD+/eg6HlGhq+xnLPiqzPS
      0FiPyWrDJ8nIRgO1fh+Gaifm6+/3NjZgQaKlYz+x4iiSbKKnu5Mrly7i9DXgr6vDaDJz9MQp
      JqZm0TyOMh+yYDszPTDHS18/TT5d4Oyz/UiVUAukqipPjDwupkEFZaciMsECwXpRMVeAlcIy
      urQ2V2/UuiiKskZ/tNUBlLy2zKuurx6bwbA2fzRVgzL4gw6lMvgDUCqVMBjWnmddbzsVIwBZ
      lpGktZ5w+vUTbm0fqKqq1wWw9hKGzeZPqVTCaDSuyQ5AsVisCDsiBBJsayqmFij0J19Az6TX
      ZkQHHb0MV5LV32s0c93W5vXH3NmF+5//5tqNbmIqRgCF6Wn0ZHKj3dhWKNVbPwtflhCokM9S
      KK7WW2uaSjqTvav3FdPLRNNvkuzSVPJFkQgTrC9lEcDI+Zc5NzgBQGR2hP/3w5fQNZWSqqHr
      GsVSiWKxSC6bIVcoksukKRRLFONB5pbTpDO51QFhqUgqlaJY0kArkEjlyuHeA8H20Cl8v/c7
      eD71SWSHA9dHPoz3330ay+FDWA4dwv2JfwWShOL34fvd30Eym9/aqGDdKUsIZLR6MapJCprO
      QjhDS72TTCLIbERhZ73CldEoamaBKk8d01OTtLTuJBrPcrTFzHxgEjWYwl6/H7eSIBJPE0vk
      OXm4icB8Dr+7MjLBxsZGVr71FKVwCElWyJw7h5pI4vrQBylMTqK4nCheL5auLvR8HtY4FSso
      D2WbBWqsqWJ+fhGs1RhvMxhTrC72dnVRW1fHvr1d2E0SINHa3sWRnuPEFqZIp5Kk0hlisWW0
      TT85+1rUWAzn+9+H97cfA1lGL6lU/8ZHSf/iZQByg8OYOztQvF5KodAGeyu4QdkE4KmtZ+Jq
      P97ahlXDkkwumyG8OE/+Dre95nNZFiZGsNc0E1xOsLejDaNSebOz+bExYn/zTbRUGoPPh/P9
      7yP+7HcoBAIAlIKLmNvbUBMJdL189zgL1kZZQqCm9jYspioOHTmGx2vH3rkXi7Maj20c3VrH
      Pr8DWB0kt7e1A9DW3obZbMQeCJCz1rKvyUfGDYHFGD093chGK+0tlRH+ABjr66l673vJXbmC
      lsuBJOF69COUgkHyg4OoyRSFiSnyY2MYm5tAVLpuCiomE7zw2L8R06APGOvRbvx/8Pv39V6R
      CS435cjyCO6NbfCZV8wVQNQCPRh/RC2QQLCNEAIQbGsqphboE1/8PolMfqPd2DL88tFdPPaB
      YxvtxoZTMQIoltTVEglBWVArLdO4TtwxBMqlVghFEwCEg/Ok8/c+d62V8gTmF1/3XIrZ2eW3
      eGeRwMz8Pe9PILgX7ngFmJyYIJws4nv4JIl4lExBJ4RMS3MDyfgyK9EVXL4aYuEQNU07sBkl
      ZmdmqPI14K6yklqJML8QZKUoU+91MhOYp7q2kWprjvmZOXKFJDt3tkAxw9TMHO6aRrzVDjLx
      ZRbCIZajRXa0ND6oz+KecFhN/IePvY1nfzaEp8rG0Y56vE4r33v5Gm87uIOB8SX+8fw4//Rd
      +7BbjHz9h5c22mXBbXjzK4BeJFsyUO8yE88WoZQjlilRii+xtJLhUt8F7C4HZ0+/QlWVmaGR
      KUYv96Naqhi7cpFEMsqV0TlqarxIQD6fx1tTy7XBK2jopLNF3HaJ3oFhcrkCvtp6RoevUsqu
      cHFohhq/tyzdjteLXzm2i0vjQQyyzPN9kzz+f88wOrvM1akQ6WyBWo8dk1HBbDSQK4is72bl
      Ta8AyeAMi8sx8qYcCYMft8HCjsYG1EiRbKlElduHz+uhpqYWn6eamcUMwUgYe0kmk00RCYXx
      Ne3CWaVgVOKEF+cIJwtEQjGKSPhqavDWNjM+00ckOEcomWMxEiMdnsO/sxOXS8GobM6isda6
      amrcdiLxDLUeB7IEu5s8BKMpEpk8JVUjmsiyr9XPfCRBjdu+0S4L3oQ3vQLMLK3wrne+nYce
      eQ9qfJ67GX7uaGrCbHdS37QDn9/P0uQgE5MTZAoqiVQat7sao0EGCWLhICODl6jyNpBIpnFX
      uzEqMjZfA4ujA4yPjZMulmdxhHKjaRqLy0kavFX4q20oisxD+5t5+crszW1GAhHee6Kda4G3
      GusINpI3zQTn83lMJjOStPpYliVkxQhaCV1S0NQiJpOJQqGIyWigUFQxGmSSiQSS0YLDbiGf
      SZNXwWpe7SOaSGawWq2YzAbSiRSqpOByOtBLBVaSGaw2KxaTiXwuTb4EFpMJs9mEqqr8y89/
      j0Rmc7Vcr/c60HWIJbPsafZyZXL1inWorZbhQIQju+voH12krdHDyExkg719Le/paePffqjn
      Nc9tx0zwm4ZA5lfdsfTqx8jXjSirz5lMpuu/Vy8mzmr3zU0tNgev7hbqdptuPq5yuW4+lgwm
      PK96zWJ97fs2K4vLqZuPb5z8AAMTSwCcG1qdxdpsJ7/gFhWTB9hR6yKVLa7Rio6uU5aaolUT
      ax2kl8mf672372XSwOuyrmmfWwVRDHef/ohiuDtTKSGQqAUSbGsqJgTS4rNIa7xY6bqOrmlo
      a7whXdNWv3F59aqDihHZ2bAmu4IHT8UIIPPUb0I2ttFuvCmytx37x/9uo90Q3CMiBBJsa8p+
      BcinlhkYnEAxGmlp2wPxAPi68Nnu0VBhhZHZPJ3XV5q8XzIFjZWsiteuoMgSy6kSsiThcyis
      ZFUMskSVRSFT0MgUNLx2Zc2DbUHlUHYBZFNxvE17aPUbePncIHtqJBanJ5gtFTiwv5NsPMTY
      1Dw72jpxKVkmFqJkckUO7OsiGwsyNrNAfUs79VVF0mtcazhb0Pij7wfRdbCZZN53oIqn++PE
      syr/rMfNsxfjVNsU/uT9tfzP01F6A1n+z8ebyvRJCCqB8odAusro4ADnzvfjb2hE1zVMDg+t
      1SrjiwkuD09y8OB+hq9copBYJCFV09ns5PLQNIrZxu7d7UwOD5alMZbZKPHFD9bz2C95UHWd
      nlYbPS02/A4DtVUKVtPqN31B1UnmNRpcFTMkEpSJ8gtAUtiz7xDHjnWzvDSHJCt43G7MZjOl
      YgGz1YpBMWI2yGhIVFVVYXX5oZhgdHiQ+YUguUKBciQnJOCHgwn++nSU3/9lPxLQ5jfhdRgI
      xIpISBzdYeW5oRTN7rXPNQsqj7ILQEJnfPgKA5evYrRUIcsKsgRIMgaTGbOW4/yF80jWahR0
      RgcvcvbMORrbOpF0jXQ6haavtk1U1rjkTyyj8r/OxNhbb+HnY2n+4WqSS7NZ4lmVRHa1vO9t
      bTb+/MUI79xTOU24BOVjQzPBmYVBZuQ2uuruXPmjqiqZv37HPU+DZgsar0xl0HSwmST21Vu4
      NJelyqxwpNnCtVCB3X4TVxZyHGq0MBYqsLvGdF+D4PuZBhWZ4I23s6FBr9mzg2Zp/UIPq0nm
      XR2v/WZ/ZPetvztrVwv6Djet1sXsqRUty7cbGyoAxVLF3QYeht3vgcIal0iiXEsSvbEYTnas
      bbpWsDGIYrj79EcUw92ZSgmBRCZYsK2pnInv2QBoa+wLpOtImrbm1VkkTQOzBRo3Z8cKwd1T
      OQL4xc8hv7Y1wySgHAsTyQA+vxDAFkCEQIJtTVkFMDRwgWA0BVqBsfGZcpq+Z+ZiMX48OEQs
      vTpzFM9kmQyH0XWdi4EAk+Hwze0uTE1voKeCjaSsAkgXSsxOjqPpKqHwMqVckou9vVzoG6Cg
      6YRmJ7jQ28uloTHUVIjT5/s5d/YcK5kigcA0mg5TkxOU8gnGRic4338F9T7C/mQux188/wIj
      i4v84bPfZXhxkU8++Q2eOn8BgC/95AX+8oWX0HWdr//iNF958aVyfgyCCqKsApAUMy1+CzPB
      OACKyYrP50ZPLzG9uMJUcIWjR7tRMwn0fBKzt4VjR/czNjxMdHm1c0I4HEIrZbl6bZaD+7u4
      n2oIh9nM5z/8a7T6fNS7XOyuqeW/fOj9N6dRbSYzJoNCIpdD03U8DtG4artS9jGAv6mN5dlJ
      NGBx/CppxcmOxlqKpRIGoxFZutUFQVEUZFm5bXOFHTvbsJgM97VKj67r/NmPf8L4Uog//Cfv
      xaDIKK+6fVGS4OH2dr75yln2NdTf55EKtgJlFYDD4UBSjOxq9lHQDDjcXpbnJpkNxXHYbFQp
      JS709ROKpQGdyZHLnDt/kfbOvXgcVnr7+ogkckiyEYft/ssSFuNxnr7Qx2Qkwp8+9xPOTkzy
      X//+B/z9pQG+238RgBO7dvI3r5zlkY6OMh29oBJ5cJlgXSMwNUmhVGI5rXJ0h4UrSS9HWqvf
      8q2qqiI/9S2ku5wGLakq4WQSHTDICg6zmZVsBgC72Qw6VFktrGQyuG02ErkcLus99snx+eH9
      H7y397wOkQneeDsPMA8gUVtfTyZXpLXNiYLGPtf6zMIaFIX66tcKy2Y2vWE7j3019r/nk1+w
      ZXhwApAkzFY75pvnmswbT8k7cPgIqGtrlqujo2v6mr8pNV1Dstk3cfN2wd1SOZngvfvWvm6t
      rqOpKvIaQw5dVUHazKsXCO4WkQkWbGsq5grw7MBFcqW7X2llb20d3c071tEjwVagogQQz919
      MdyvHTwsBCB4SzZVCJTLi3WABQ+WByCAEiNDY+i6ykBfP4U7NPy5Ojh4649ihqXlxGteP9TQ
      xEcOHeEjh46wy+vjoZ272OOvAaDd5+dU6651OQLB1uUBhEA6mUyWxclhzP5m5GKSs31X0YGO
      Qz3kQhPMhhP4G3cSD8/T16shmZ0c6fATWylQ63XetLSQWCFbLPCrXXsxLMzTs6OVbKHAaDjE
      Qzt3YTeZeWV6cv0PSbBleCBjgJXwHAsRM+99zz4WB/vYceg4dcYsFy4Poas5Tp44AUB0qZHu
      7m4GevvRdPcbWiOGUylyxRL5YonxSJhcsUC2WKTe6SRfKomenoJ75oGMAar9TfzSkTb6ro5j
      NCnksgWKhSyywYIEqJpGqbSa5HqrU/iR9t2cnppAu17BMRYO8e49nYxHwut7EIItyQMQgIzf
      78VV20KdVcXR0kVmdpgr1xbYv38Pnbua6O/rJ7icwO/3A+Dz+5EUK37Pa5ummA0GahwORpaC
      AORKJcYjIVrcHiYjEfL3ME0qEEAFtUX52DefvOdp0E+eevg1z23G4rPN5s92K4bbVNOgAsGD
      pmISYf/+3e9BvYe2KLVVzrfeSLDtqRgBHG5sErM8grIjQiDBtqZirgBPnPlLssXMm77usXn5
      F8d/6wF6JNgKVIwALs71kswn3vT1Bqfo0ia4d9YlBFpZ2bzr+QoEr6YsVwC1kOHs2fOYrA5q
      m3cRWZiku/vY2owWMywlSjdrgVKhDGe/3Y+m6ez/YAfzF4M46xw0Hqlj/lKQZD4Pa7tHXbAN
      KYsAFqdHaeg4ys7aKgCmB1+hr6+XZB5OHWzlld5BDLLE3qPHGTjzU5xuLzndzJEmAy+OJPEp
      KWo6T2LLB5kNLlOSrJw8UM9CMHdTAPH5BE3H6qnfX4NskEkGU2SWs9QfqiU8GsXguPMySwLB
      7ShLCKRpGrJyy5TDXcvRo8dwWGSWpq+Rl60YFI2lUAynt4Gjx45hlUug67R1HeJkz15i4TiJ
      dIHD3cewywVUXb9Z7wPgrHNQyquMPDdBbCaObJCx+6yEhsI4/DZkg5giFdw7ZRFAfUsbgaF+
      BgcHmVuKvuY1X2MrdqNEldOLz/0mLQivn7uJWJixa8MshONv2CQdzWKwGMgnCxSzRQBqOn1c
      +/Ekvt2echyGYBtStlogtVQkly9itlhA1zAYDJRKJQyKQqGQp6SB1WK+XvuiUCqpKDJoKCiS
      TkkFCZV8cbUWxaDIqKqOwaCgqiqf+N+/ycj5UWxuK7VdPiLjUTyt1YSuRajp9GGNV/Hk737r
      jj5uxtqbzebPdqsFKts0qGIwYjfc2MHqP+LGP9ZkttzsAXTjuRu/VxeskFj9U8ZmuOXkq88L
      c5WJXW+7dY+vf48XgPoDq4vT+Xa5y3Uogm1ExeQB2ny7ydxhlUif3f8AvRFsFSqmHFqsEvlg
      /NluIZCoBRJsayomBFKzc0jcvhxatjQgyeu34rxg61IxAsiM/ymoqdu+Zu/6rygWsdCF4N4R
      IZBgW1NmAWgsLgYBnYXANHm1vOPrQlFlai6BqunML6VZSax2kluJxZifny/rvgTbg/ILYCFI
      anmBuVgeg5bl6qWLXB4ao6RrBCYnuHr5IpNzIbRMjMuDw/T2D5AtqiwFF9F1WJifQy2kmJtb
      5MrgyGtWifz2P4zzif/4U1LpIn/038/xF9+4gq7rfOlLX+KP//iPy3sogm1B2UOgeHieX/Rd
      4/D+PUiSQl1jE6ZskEAkw9xckPbOAywvTqNloyQlFwc7mrh6dZTFxXl0YG5uFrWY5uyFKzTt
      aLm5SuRcMM1CKMOx/avz/X63lXxBJZbIo+oydXV15T4UwTag7AJw+RvpanYzsxglMjtBILSC
      JknkCyUsNgcWkwHleuGczWbDaHUi6W9sirtzdxfuKuvNNTH+4htXSGeLXL62zNlLS0gSdO6q
      5h9/Psv+Q6fE/cKC+6LMApAwGY20dBwkOXeNHAbS8SjJdB6jIt9MRKz+vr5K5NlzNO3sxGGS
      6e3rYz68ApKM0ai8xvInHu3kfe9qpaHGTnP9asOsnoM1PP3DcY4dPVTewxBsGzYsE1xanrin
      VSLTg78Haorp+SRNdXbmFlM01jmYnktw4Ff+nMVllZaWljva2YyZ183mz3bLBG9YHkBxNrDb
      fu8H1tq4etNNa9PqjTK7W6tRDAotLU1l9U+wPdgwAUhGK457OP+NnodAu/0CGpJiK5NXgu1G
      xWSCLY2PioGuoOyITLBgW1MxV4DFiefQtFsLZpjMLmpaHtlAjwRbgYoRwNCZz1PM3eo35PR1
      CQEI1kz5QiBd525nVPW72vbu7QkE98tdCSAwMUkJoJRmZGz29hupGfoHRu9qp2pxmcuXA2+x
      VYGL/bdWjUxnVM4OJBieSKPrOpcGg4yPjwMwPj7OmTNn7mrfAsGruasQKB5boR5AK7IcTTA1
      OkJ9WweZ8Cwli5f4/DjxdJq07iSzEuLyyCS26hq6Wn3MTM+xlCyxr8XD2MwiBpubA7tdzE2N
      kk3P0dJ1BFspxtj0IorVyeF9uxkbvEgiXyRbuNXsamwmSyqt0ns1SbGk8+KFOFPx/8Hjjz/O
      17/+daLRKA899NA6fUyCrcpdXQFyqSj9vb03KzftRo3AYpS5+SBKYYWcycPR7kM4zEaGRsY5
      3HMCay5MJJ1jbCbMiaMHqKr24rCaCUyMU0SisXUPJ06eYPraIFXVXuxWE9PTk2SXp0ibGzna
      fRi76VY5RMdOG1fH0sRTJXY1W3G73SiKwsLCAmazGY9H9AYS3Dt3JQCLw0P3sWMc6z6E1ajg
      37GL2NwoRcWBSVIxGIw3V3fMp+MM9PcRV02YgR2trRhkiUv9/TS1ddBS60WD60VuOiBxsa+P
      prYOmut9qMUCBpOZ10/5W80yv/0bDezfbWdwfLU7xJEjR3jqqac4cuRImT4OwXbjrgRQ5XKu
      nuCyAXe1A0mx4CCHs64Rh7ee/PIMfQNDKCYTBw4fRFNVkCSMJjMOuxWAGr+H4atXiedLKLKR
      dGyec+cu0L53P7V+D8ODV0lki1hr2igFh+i/eAXFeivD+70XI3z5b+cZGElR41ntMtTT08OP
      fvQjIQDBfXNfxXDpeISLV8c5fvIEJmX9s7OqqvL8N95JKrmMIkuYjBLW6k4eefTb5PN5LBbL
      zd93YjMWn202f0Qx3F1gsbs4fvzYAzn5b6AoEjbLrTGBySgjyzJW6+oV5q1OfoHgdtyXABSD
      EeWtNysrHcc/g6beKoYzWcWgV7B2KiYT3NTxQVEMJyg7ohhOsK2pGAG88I8/YnpiYqPdEGwx
      KkYAZ0+/zPzcm5RhCAT3ScUIQCBYD9ZVALlkkOef+ynnz57h6uuK6HRN5eKlS3dtS9d1zp49
      R39/PwDf/OY3efnllwE4ffo0Tz31VPkcF2wb1nUWSNM0Gnd20Lnbz7mzF1l2aKtd4RQbbXU2
      hoeHMdmrseRjLOc1sqkcPQ+fIjh+lUg8jau2lY7W1aa3i0tLzF4awO33093dzYsvvojL5eKh
      hx7iBz/4Ael0mo9+9KPreTiCLcg6h0AaU9cG6b3Qi6umAZPFikGRCczP4qltpnVnK/t2t5Iv
      wP4j3XTU2onlNCxWG4piJBCYvmmpoa6Oh0/daoDlcDioqqpibGwMl8uFw+FY30MRbEnWWQAy
      Ozv20XP8JF1tDQyPjLPvwEFq3FVIgK5z66YX6UaBXIbp2SQHDuzDbr5zuu3YsWM8+eSTHDu2
      xkW5BduWdQ2BjGYHXveN5JXEzh31XLkyhMvjA1mhweNgeGIWb20NRsDmqUEz2qnxyIyMTeOv
      udXvc2xiksHRMRxVVXg8HjweD0ePHuXpp5/m4MGDN8cGAsG9UDFrhH3+P/8n3vkr7+HhR95x
      33Y2Y/HZZvNnuxXDiWlQwbamYmqBPv7J36LaLQrgBOWlYgTQ3NIqiuEEZUeEQIJtTcUI4O+u
      XORaKLjRbgi2GBUjgJmVKIlcbqPdEGwx1iSAu+rwpqssR1fWshuBYN1YkwBiC1NMB1dP7hti
      ePWPpmnoWonpmbk3PK9pOqvtD7XV7W6+zhv+BijlC3zrySd54YUXAPjc5z7Hs88+C8B3vvMd
      vvjFL67lUATblLLNAoUCI+TtLThz88wXnWjLk+R0Aw07WgEITg4TUzwk5wYx2twsr2R41zuO
      ceanZ7DYbdi8TWSW5+ju6eF7Tz/Dr374UQb7ezl6/AQASzMBUvEEgcBqS8W5uTlCoRAf+MAH
      OH/+PKqqlutQBNuIdRkDaPkUOVM1PT09NPqcLC9MMhTMsre1DoOtmu7ubhpcNpLhaZztx+g5
      cZJkZJ4au5GFYIBdHZ0EFhaQTW5uNJ5o3NNOV/et/j8mk4na2loGBgaoq6srS7ZQsP0omwBk
      aTXdHA6FwGhBTSfIFwqks3m8Dbtocek3w6UbmJw+VhZmyKejqIqF5l2NnDs7zu79XYQuX8C7
      487rfp08eZInnniC48ePl+swBNuMNYVAdreH6cExVkJWujp3Ex4dxu5vwe/2Yq2zMzw0RGt7
      B60tTXiqq1gIhmhtbQWgsbUVs8XNgZ1ZhiaWOH70ILIMRw9nsBpMtB44QmP1rV4/w6dfYfRn
      p6m2WvF4POzfv58jR47ws5/9jH379t3sFC0Q3AsVUwz3l6df4uHWdnqujynuh81YfLbZ/BHF
      cALBNqJiaoEeO/UIBuVB96MTbHUqRgBmg0EUwwnKjgiBBNuaihHA0KW+jXZBsAWpGAEUC8WN
      dkGwBVl3Aei6znJokbmFJVTtbmdcNVKp9Lr6JRDAAxBAZGaQwHIeqZQllsyQyWQASKVS6FqR
      TDZPOLJMKZ9lbnaWRDpHJhHmpZd+QTAU5YZklkJLfOYzn+GZZ54B4LHHHuPLX/4yAH/1V3/F
      Zz7zmfU+FMEWZN0FYDCZScSimJ1efC4rI8MjAAxcvoSeC/PDH75INJUnnU4hG41cvXwJXTZg
      NBgwGm9NUuWyObq7u0mlUgAoisLY2Bi5XI7Z2VnMZvN6H4pgC7LuAnDXt9NzYBfBySuMTEfe
      8Hpz+z46WhuIRYLMz84Riq5gstpxOl143c6bq0+2tLTcLKOAVQG0tLRw+vRpWlpaUESOQHAf
      rLsAokvzLEWT2Ox2NFVFL+WYn58lGIkDq1WdANFYkvqGekwGGTCgldKEl1duhkAr8RUCgQDB
      YJBoNArAqVOneOKJJzhx4sR6H4Zgi6J89rOf/ex67sBstVHMZzHZvbQ21uD1VJMtaHR17MZs
      c1LttGE0KPj8HjLZIh17dmMxmfB5qimoEnabBV3XeeHHzzE+NU2hUMDlctHU1MSJEycolUq8
      /e1vR5Zl2tra3tIfXdfLUjMjSVJZEnObzR9N08pyNa0UOxVTDHel9zyHT5xak53NWHy22fwR
      xXCbFJPZtNEuCLYgFSOArkPdG+2CYAtSMQIQCNaDyhGAVtpoDwRbkMoRQGRkoz0QbEEqRwAC
      wTpwWwHMjA3S29vL6NQcmq4zNj72pgZG13wzus7E2Bhv2WAOyGaz5PN5dF0nl+09o5UAAAgG
      SURBVMtRLK5WiBaLRXKibaLgPritAJYTebqPHUWPBphfybESizBy9TIL4Ti5VIJ0rkgxmyCW
      yLISDTN8dYCFSBxdU5keG+Ly4ChFTScSCTE1OsTkXAhd1wnNT3H12iSarhNdmqX/4gCpvEY8
      HmNy9CpT8+E3FcKF8xf49V//dR599FEWFxf52Mc+xuc+9zl0XecLX/gCn/rUp9bzcxJsUW4r
      gFRsid4LFwimJbwOE+lEgqa2DuYnR4lHllhOZsnGl5gLxSkVCrS0dzI/colUQcNdt4Nmj4HR
      qQXGhq/iqmslNj9NJhlkLJinuVrnyrU5BsdnObBvD6gl8ukE7oZ2lhcmUd9EAd//wQ/5yle+
      wqc//Wmef/556uvricfjpFIpstksjY2N6/pBCbYmtxWAw13LsWPHaKqWWYplqXL7cFjNGA0K
      rz89TbYqbBYzPreN6HKEKwOXGZ+eJ5vLYbK78DhtmAwG0isRItEIo4FlZKlER0sdfX39LC0n
      sTjcuB0WDEYjb9jBdQolFYvFgsPhIJfLIUkSHR0d/PjHP6ajo0PcLyy4L24rgHRsif7+i8yG
      Etgsr00fW+1mJoavcGVolJIOajZOX+8F5hMKHjuUStd7dL7ufHTUtuIxrqbs3dUuotEYBoOB
      fOH1sXuRvr7LFBNBBkbnbj57+EAXjz/+OF/96ldvLot66tQpvva1r4nOcIL75ra1QK99SgJW
      i63up2zo5vtWzdxpy9tuIEnSauPb0CA/H1nG6XTS3d1Nf38/+/fvp7e3l56eHkZGRjh48OAd
      fdmMtTebzZ/tVgtUMcVwcmQIqfbAmuxsxhNus/mz3QRQOXkAU9VGeyDYglSOAKpbNtoDwRak
      YkKgcrmpaVpZQgWgbDegbDV/KslOxbRGVBRlzf/gG3dOrfUOo3LG3OXwR9M0gLIJaa1jEoBS
      qVQRdiriClCubzhh58HYuWGrEuxUhAAEgvWicgbBAsE6sO5dIcqHxuULrzAZCJAsKFiKMX70
      837a23ciqVm+953v4Gpop8pSvmGNmkvSf3GAubkAkZSKTU9y4eIg04E5auobefm57yK5Gqi2
      W5i6fIbz4yu076gt2/5vh64VefHvv4vk3oEhF+Z8/xUCM3P46ht45fnvo9lrcFdZmRk8yyvX
      IuxuqVtXfyLzkwwMjRGLZ/B5q+g7+wqBwAwFxUE+fI3Tg0u0t9RRSC3zzLf/gV2H9rGeyxmO
      D11kfHqOmdkgtXU+Lp47S2B2hiw21Og4P708z57WBorZFZ751t9VzhVAS4dJGfycOvkQ8eAM
      JU3DU2UkvJJlJbyI3eW+h96jd4dstHHkaA9HDu0jEYswOTXL4eMn2dfsIrC0QpXPz/LCPOgl
      ltNF7Mr6R5OBsWHcdY1omsb01AyHek6yf6ePmYVl7B4fsaVF0FXCySJV6z7FoTM+PUdzUz3N
      zQ1kIvOY/Ts5eeoESzOTaLqChTyposbS/Cwurx9tnT0Kx1IcOnIEu5wlsrSIobqZEydPEp6d
      QtclrBRJFDTCszM4vbWVI4BSIY9isYAkYdChBNQ1NLC0uEgwtEJDnbfs+5QUhZWlAGcuXOXQ
      4YOoqo5BkTFbzORyeSSDDauUIxoJYfPWv778qewU01HCWRMNHjsApZKOQVEwW8zkC3kkxYpd
      zhONhrFW16y7P1AivpJENhgZGegllEhjMpqRZCM6BQAaG/wsLISIpHXqnOvd2UPHU2Wh70Iv
      8ZIJIwWMRjOSbEBn9d6RpuY6FuaCLKU0GqrNlSMAo8NNIRamWMhQUIwYAcVajZQJksKKzVD+
      f7eajXJ5IszDD5/CaTXhsBmJJTOEwit43E4A6vzVXBocp76upuz7fz2pZIJCLsHgyDjj4xPY
      bGai8RThcBR3dTUA9bUeBgZGqGtY39BnFSNudxVOt5dquwWTzclKLEwhHUU2uQBweGqJzV3D
      6PA8AEEWCS7nOX78OH5LiYxuJREPU8isIBtXKwls1X4SSxMYbC4kKmgMIClmbHKea5Oz7Ona
      j9VkwGC2Um2RsXjqqbIasdqrMBvL1yO0mEkSWo4SDgVJ5nXa21oJjI2gWr3savQjSeCvrSGX
      12mu94JswOV0lG3/r8fqqKa5qZEan4e6hmYa6muYnxihYHLT3lyDJIHPX0O2oLOjwQeSgsu1
      fv4AeD0uRodHMLvraW1uQs7FmJxbpmtvFyajjNnmwkiBmoYdWIwyDpeL9eviquC0SYxcG8dc
      Xc/OliaMxSQTs2E693ZhNiqYrE7MUgFv3Q4sJllMgwq2NxUTAgkE64EQgGBbIwQg2NYIAQi2
      NUIAgookm06RzRcBnUwme+e7be+AEICgInn6q3/C57/6FKqe5+tfexIVnXw2QzKVQdd18rks
      hXyWfKFINpslmUhSKBRIJJKomk6pmCcej1fO/QACwWsw+Wgwxri2mAAgFZrkv/3Z19B0nXd/
      9F8z/dLfslRQeMe73sMz33wSp91MUndiyoV518f/AOPcy7x8cVQIQFC5vPu9v8zzz72ADoxf
      OsPJD/82725V+ep3z2HX4Dd+63ep1UNcPfZuHn13G997OcYjOxOcWY7R7vTTc9wtQiBB5WLx
      7KTRGGYykqFh5x7O/ugZvvXtZ6lraV9df67Kevs3qjl+8tIvSCWiIhMsqExmJyfwNbdCNsa1
      QIyD+9tZnBwhmIRDBzpZDExRt2MXcinD3FKcBr+NYLSI11oiWrJizkeYj6tCAILtjQiBBNua
      /w/IqjiLpFkkNwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='86' name='Revenues' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABWCAYAAACZ45lZAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAYTElEQVR4nO2daVhT19bH/0kIESjI5FAFROMsDrdaEaVUrcO1oIIWUKqt7W1rr71O9drW
      F62h2Eevdnirhb621FbqCE6IEyqCAyJQB4oMMgvIjECApCHk5P2Qm11iRuBAaHN+z8MHcs7Z
      a++TvfZee+2dtVhyuVwOBgYThW3sCjAwGBNGARhMGkYBGEwaRgEYTBpGARhMGkYBGEwaRgEY
      TBpGARhMGkYBGEwaRgEYTBpGARhMGkYBGEwaRgEYTBpGARhMGkYBGEwaRgEYTBpGARhMGkYB
      GEwaRgG6gFAogYdHBFgsAZydv0JZmdDYVWLoIGadeSggIBrR0ZmdEjhtmhPi4lbCxobXqee1
      IRAkIiQkEQAQFeUPf/9xtJbfHbSvsybMzTlwcrKBt/dIrFnzIkaPduy5ypkIzAzQi2ltlaGw
      sB779qVg3LgwBAZGo6lJYuxq/aVgFOBPAkXJERWVCW/vIxAKGSWgi06ZQFFR/gD81T5vP6Vv
      3z4TAsHMLlTNtND0voRCCRISiiAQJOLBg0oAQFJSCU6ezMJbb/3NCLX868HMAL0YGxseFi8e
      jTt33sGKFRMAKGaCkyezIZXKjFy7vwa9RgGamiTYsycJo0d/CzOzz8BiCWBp+Tnc3X/AiRNZ
      kMkotWeiozPBYgnAYglUFpMBAdHkc+Wfh0eEmunQ2ipDbOwjBAZGw8XlayKXxRLA0XE3fH2P
      kZHXmPB4Zli9egqsrRWOg5qaFrS0SLXe//BhNZYtO4G+fXeCxRKAwwmBi8vXEAgS0dDwu9r9
      eXl1GDz4S7BYAowcuQ/l5U1ay5ZKZfDxOQIWSwBz81DExOSo3UNRcty48Rhz50bC0vJzsFgC
      mJl9hv37f4VIpL3eyu+tb9+dSE4uJW15443TGDBgDynHzS0cFy/mgaLUY7olJ5eSdmv6zp+9
      r1coQFJSCcaODcNHH13Bo0e1pLOLxVKkpj6Bv38U3N0j8PhxA20yKyqaMGbMt1i06CiiojJR
      WtqoomR1dSLExORgypTvsWPHDY0vuydxcrIhnrPy8iY0N7eq3SORtGHduouYNOn/cPz4Q/Ll
      U5QcpaWNCAlJxPjx4UhJKVN5ztXVFi++OBgAUFzcgPv3K7TWo6KiGRkZVQCAoUNtMW2ak8r1
      +nox/PyOYdasn3H1aiHEYkWHl8kovP/+OUyf/qNB32NxcQNeffUwJk78Dr/8ko7q6hZSTmZm
      Nfz8juPIkQy95ejD6Apw61YJFi48qteHfvduOebO/QXFxfQogUwmR2urfjNCJqOwa9ctxMcX
      0iK3sxQUPMXTp2IAqsqghKLk2LnzFsLCUjXOlkrKyoR4/fVTKCh4Sj7jcjlYvHgU2GwWpFIZ
      rl7V3tbk5FLyXXl5DcGAAc+Ra0oFPHv2kdYBIz29EitWnEJ9vVirDKFQgqCgk1pHeaWs0NDr
      qKpq1lqOIRhVAYRCCTZvvkxehpOTDQ4fXgqRKBhyuQB1dR/j009fhqUlF4Biqt658yZ5Kf7+
      4yCXCyCXC7B9+0xSblSUP/lc+Zec/I5ap+HxzODlNQTff78QRUUb0Nb2KeRyASSSbYiPfxPj
      xvUHALS0tCIqqnP7HnRQXy+GQJBIRlM3t/5qbblx4zG++OI2KEoODoeNdevc8eTJJtKemJjl
      cHKyAaBQpvDwNJXO5enpgoEDFZ352rUi1NWJNNbl6tVCUJQcXC4Hvr6jVa4dOZJBRmVLSy52
      756LurqPIZcLIBIFExPu9u1SREdn6W330KF2CA2djZKSjZDJtkMi2YZvvlkAHk/hu6msbEZh
      Yb3ecnRhVAVISCjC3buK6ZbPt0di4ioEBY2HhYWiw9vbWyAkZBb2719IGn3uXK7K6NVZnn/+
      OWRlfYDr19/Cu+9OhqurLTgcxeswN+dg9uyhiIz0g729BQCFLdqT7keKkqO8vAnffZeGCRO+
      w61bJQCAfv2s8MEHU9XujYxMR0tLK9hsFrZu9cLXX/8dgwZZk/YsWjQKsbFB6NfPCgAQG5uL
      yso/Rs9nzaDc3Dq1OlVVNePGjccAFObPlCmDyLWWllZERqaDouTg8cywf/9CbN48g7w/Cwsu
      Dh9eAh7PDBQlx9GjGWhpUTfjlPdGRvohL28ttm71grNzX7DZLJibc/DPf07BnDnDOvVONWFU
      BTh3Lpd4M1avngw+317jfYGB47B06RgACvv3+vXHXZbN4bBhbs7Rec+wYXYYPlxRJ5FI2q2e
      l5CQRJVFO4cTgsGDv8SaNeeJycHjmeGrr+Zj0qSBKs/W1LQgKUmhIHy+Pd57bzLYbJaajAkT
      BsDHZyQAhSmUnV1DrrU3g4RCCeLiCtSef/iwGqWlms2fgoJ6ZGRUAwA8PJzg5zda7fnZs4fC
      w0OxZsjOrsWTJ5oX21wuG8OH25MBSfUah1gEdNCpfQA6aGqSICenFgDg4GCJ+fOHa72Xy+XA
      23skmV4zM6tpq0dRUT0OHkxHdHQmysqEWkf5p0/FEIvbaJPbUVxdbbF//0LMm8dXu/b4cSNZ
      JI4f35+YMs/CZrMwfbozfvrpPsRiKVlTKFGaQYpBphgtLa2wsjIn18+dy4VYLNVo/uTnPyWm
      7IwZLirPKbGyMsekSQORmFgMsVj6XzPLoUPvgW6MpgByOdDWplisWViYkalSGy4ufWFtzUNT
      k0TryNERJJI2CASJ2LPnts5Fo7Hh8+2xf78PZs501TgiAoqFutKeP3UqGxxOiEFlZ2bWwL/d
      fqbSDIqJyUFGRjUKCuoxYcIAAIr12p07Cu/Rs+bPs3X4/PMb+PzzGzplC4WSXnF40OheIGOx
      e3cSdu9OgkxGwdXVFgcOLEZV1WaVhXNj4xY1N193sX37TMjlAshk2xEaOpt09rIyIXJz68Bi
      qZs0dNPeDKqrEyE19Qm5lplZjawshcn0rPnzZ8ZoMwCLBZiZKb7k5uZWlJc3ES+FJkpKGslB
      sMGDrbsku6qqGYcO/QaKksPd3QkXL74OOzvdM1BPwWaz8D//8xLa2iiEhl6HRNKGjRvjYG3N
      I7vBuliyZAyiowM0rgEMob0ZdOZMDt58cyK4XA5SUp5AKJRoNH+eJTjYCzt2zO6U/J7GaDOA
      tTWPHO9taPgd168Xa71XKpWpuCGV7snOUlhYTzwgc+YM6zWdXwmbzcKWLZ4IChoP4A//+vnz
      uRrvd3HpS0zI+/cru7Rh2N4blJFRhYqKZojFUpw7p5CtyfwBgCFDbGFr2wcAEB9f+Kc5sGdU
      E8jHZyS4XIUnJjw8DXl56q43ADh+PBOXLuUDAAYNssbLLw/RWW5aWrnBdXj4sFqjd4ei5Lh5
      8zFtG28dhcczQ3i4N5YuHQtAsRewcuVp4g5tT//+VmRQKCqqx6efJkAi0b1gr6pq1rgZ1d4M
      KisTIjm5FKWlQjx8qHA8aDN/+Hw7uLj0BQCkpj7BV18l69w9Lylp1Hksgg4oSq61DnV1Ykil
      lHEVYNasoZg8+XkACt/z7NkHceRIBtnwefpUjO3bE7B6dSz5Qn18Rmp0l7Y3n8LCUrF3bwop
      RyyWorS0kXR0KytzoniXLuXjs8+uE/OquroFkZHpmDjxO/j4HFHxlfc01tY8/PDDQnh6ugBQ
      KMHy5SfUjjJwuRwEBY0nbTp06DdMmxahchRBua8QGZkOL6+fMGZMGPHCPcuMGS7o188KFCVH
      XFwBbt58jJqaFp3mj4ODJfz8xhBZoaHXsWDBIfz6aznZcS8ubsC+fSlwcwvHSy8dUPNC0UH7
      7zY9vQrh4WlobZWR9v/ww124uYVj8eKjEIulxlsDAIrTjnv2zMOiRUdRXy/+7zb9Sa33jxjh
      gC1bXtJo37788hAMGmSN8vImiERSrF9/EevXXyTXlb9E43I54PPt8MILz+PKlQJIJG3YseMG
      duxQ91r06WMGMzO2xnM3PYWdnQV+/tkXPj5HkJNTS44yxMWtUBkIli4dg4sX83Do0G8AgAcP
      KjF3bqTWcnX9Ik9p5pw/n4vY2EeIj1fs/g4frtn8UbJ+vTvi4wtx61YJKEqOy5cLcPmy+n4C
      AJ3rva7g5GSDIUP6oq5OBImkDcHB8QgOjtd6v9G9QJ6eLoiNXa73hUyePAhXrqyEq6utxusj
      RjjgP/+ZS3aMdWFlZQ6BYCYcHS01XmezWViwYARSUt6Fm1vX1ht0wOfb49y5INLhCwqeYunS
      KBVbX2kyBQSMM2gB7ORko3Xt036kr60VoaSkEYB+74+dnQWOHn0NM2a46JTNZrMwdKgdrRta
      SuztLfDRRzO09gM2mwUvryEID/eGjQ3P+AoAKKbcrKwPsHv3XIwa5UhcgBYWXEydOhjR0QFI
      SXkHQ4Zo7vxKVqyYgDt33sGcOcPIcQo2m4VBg6wxfbozuNw/mjt9ujPS0t5TOXphYcHFnDnD
      kJCwCufOBWlVNmPA59vj5599SadNT69EUNBJ1Nb+cWbH2pqHo0dfw717qxEY6Ib+/a2IMpib
      czBsmB3WrnXHw4drkJGxRudvjJ/t7IZ4fwCFYl2/vgrXrr2JOXOGwcHhj0Fm7Nh+2L59JvLz
      1+HGjbf07v10lsBAN5w/H4TJkweRvuTgYInAQDfcu7caCQmryG46i0mUzWDK9IoZgIHBWDAK
      wGDSMArAYNIwCsBg0jAKwGDSMArAYNIwCsBg0jAKwGDSMArAYNIwCsBg0jAKwGDSMArAYNIw
      CsBg0jAKwGDSMArAYNIwCsBg0jAKwGDSMArAYNJ0S1QIfflv9WFIgj1FyI58rFlzHsXFDV3K
      DVxc3IB5835RiUtkY8PDpUsr4OHhrPW51lYZ4uLy8eOP95GcXIraWhEoSg5zcw74fHsEBY3H
      v/41lQSM6gp0yCovb8LJk1mIispEbm4dKYPNZsHR0RIeHs5Yv94dXl5DtMYhBYCIiHt4992z
      Bte9s98NXXJ0lWPUsCidJS+vDuvXX0JcXH6XUxdRlBz79qVoDcqlCZmMwsGD6fjkk6uoqWlR
      u97aKkN2dg22bbuGb765g4MH/fDqqyM6VT86ZD19Koav7zEkJZVofF8UJUd1dQtiYnIQE5OD
      yZMH4eTJAK1BCHoqWBhdcnSVY1QF4PHMEBo6C5s2TTcolEdDw+/YtCkOBw+m0xbROSmpBBER
      9wy+XyyWIiAgmoQK1EdtrQgrVpzCxYuvw929Y4F26ZIlEklRVFRv8GBx9245fH2P4fLllSSh
      hhKKkqvkFegu6JKjr5xuMoE0mzBisRQZGdXYtu0arl4thETShm3bEuDi0heBgW5ay1OOgps2
      xWnMcthZhEIJgoOvQSiUgMczw759C3DgwH0SBlwTUimlEorEyckGmzZNh6/vaDg724DDYaO6
      ugVhYan44ovbEImkqK8XY+fOW4iO9idRywyBblkWFlwsWjQKK1dOwIsvDoajoyXYbBZaW2X4
      7bcqBAfHkxRIDx5U4vDhDGzYME2lDGUgY0ARauTatTdJCHU6oUuOvnJ6dBGsjPNz8eIKbNv2
      MthsFiSSNuzenaQzTF5q6hNs3HiJdH5b2z7YtWsOvL1Hdqk+ERH3SGaVZcvcsGTJGIOftbXt
      gx9/XIzi4g3YsGGaSoql/v2tEBIyC+Hh3qQTZmfXdDoUYFdlWVpy8c03C1Bb+xGOHXsN3t4j
      1WIGTZkyCBcuvK6SgPv27VK1urSP6+/gYIEBA6zU7qEDuuToK8coXiA2m4W1a6eSqGuFhfXI
      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
    </thumbnail>
    <thumbnail height='192' name='Revenues by year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales Quantity by Market' width='192'>
      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
      QhhIaAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top customers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top products' width='192'>
      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
    </thumbnail>
    <thumbnail height='94' name='Year' width='192'>
      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
      Tfs/h4uFHVsMlAcAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
